apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.setup.compileSdk
    buildToolsVersion rootProject.setup.buildTools

    defaultConfig {
        minSdkVersion rootProject.setup.minSdk
        targetSdkVersion rootProject.setup.targetSdk
        versionCode rootProject.setup.vcode
        versionName rootProject.setup.vname

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {

    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    testCompile 'junit:junit:4.12'

    compile "com.android.support:support-annotations:$rootProject.ext.supportVersion"

    // rxpermissions2
    compile 'com.tbruyelle.rxpermissions2:rxpermissions:0.8.2@aar'

    compile "com.android.support:appcompat-v7:$rootProject.ext.supportVersion"
    compile "com.android.support:design:$rootProject.ext.supportVersion"

    // butterknife
//    compile "com.jakewharton:butterknife:$rootProject.versions.libButterKnife"
//    annotationProcessor "com.jakewharton:butterknife-compiler:$rootProject.versions.libButterKnife"

    compile 'com.jakewharton:butterknife:7.0.1'

    //热修复
    compile 'com.aliyun.ams:alicloud-android-hotfix:3.1.2'

    //retrofit and rxjava
    compile "com.squareup.retrofit2:retrofit:$rootProject.ext.retrofitVersion"
    compile "com.squareup.retrofit2:converter-gson:$rootProject.ext.retrofitVersion"
    compile "com.squareup.retrofit2:adapter-rxjava2:$rootProject.ext.retrofitVersion"
    compile "com.squareup.okhttp3:okhttp:$rootProject.ext.okhttpVersion"
    compile "com.squareup.okhttp3:logging-interceptor:$rootProject.ext.okhttpVersion"
    compile "io.reactivex.rxjava2:rxjava:$rootProject.ext.rxJavaVersion"
    compile "io.reactivex.rxjava2:rxandroid:$rootProject.ext.rxAndroidVersion"
    // 生命周期
    compile "com.trello.rxlifecycle2:rxlifecycle:$rootProject.ext.rxlifeVersion"
    // If you want pre-written Activities and Fragments you can subclass as providers
    compile "com.trello.rxlifecycle2:rxlifecycle-components:$rootProject.ext.rxlifeVersion"

    //rv adapter
    compile "com.github.CymChad:BaseRecyclerViewAdapterHelper:$rootProject.ext.brvahVersion"

    // log 日志
    compile 'com.orhanobut:logger:1.15'

    compile project(':lang')

    compile "net.qiujuer.genius:ui:$rootProject.ext.geniusVersion"
    compile "net.qiujuer.genius:res:$rootProject.ext.geniusVersion"
    compile "net.qiujuer.genius:graphics:$rootProject.ext.geniusVersion"
    compile "net.qiujuer.genius:kit-handler:$rootProject.ext.geniusVersion"
    //字体变换库
    compile "uk.co.chrisjenx:calligraphy:$rootProject.ext.calligraphyVersion"

    annotationProcessor "com.github.Raizlabs.DBFlow:dbflow-processor:${rootProject.ext.dbflowVersion}"
    compile "com.github.Raizlabs.DBFlow:dbflow-core:${rootProject.ext.dbflowVersion}"
    compile "com.github.Raizlabs.DBFlow:dbflow:${rootProject.ext.dbflowVersion}"

}
